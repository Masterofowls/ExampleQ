from app import create_app

app = create_app()

print("üéØ –ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ì–û–†–û–î–û–í –ò –ö–£–†–°–û–í")
print("=" * 50)

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ —Ñ–æ—Ä–º—ã
cities_from_form = [
    '–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ö–∞–∑–∞–Ω—å',
    '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥',
    '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É', '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', '–°–∞–º–∞—Ä–∞',
    '–£—Ñ–∞', '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫'
]

courses = ['1', '2', '3']

with app.test_client() as client:
    total_combinations = 0
    working_combinations = 0
    
    for city in cities_from_form:
        print(f"\nüìç {city}:")
        city_working = True
        for course in courses:
            response = client.get(f'/api/get_groups?city={city}&course={course}')
            groups = response.get_json()
            total_combinations += 1
            
            if len(groups) > 0:
                working_combinations += 1
                print(f"  ‚úÖ {course} –∫—É—Ä—Å: {len(groups)} –≥—Ä—É–ø–ø")
            else:
                print(f"  ‚ùå {course} –∫—É—Ä—Å: –ù–ï–¢ –ì–†–£–ü–ü")
                city_working = False
        
        if city_working:
            print(f"  üéâ {city} - –í–°–ï –ö–£–†–°–´ –†–ê–ë–û–¢–ê–Æ–¢!")
    
    print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"–í—Å–µ–≥–æ –≥–æ—Ä–æ–¥–æ–≤: {len(cities_from_form)}")
    print(f"–í—Å–µ–≥–æ –∫—É—Ä—Å–æ–≤ –Ω–∞ –≥–æ—Ä–æ–¥: {len(courses)}")
    print(f"–í—Å–µ–≥–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π: {total_combinations}")
    print(f"–†–∞–±–æ—Ç–∞—é—â–∏—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π: {working_combinations}")
    print(f"–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {working_combinations/total_combinations*100:.1f}%")
    
    if working_combinations == total_combinations:
        print("üöÄ –í–°–ï –ö–û–ú–ë–ò–ù–ê–¶–ò–ò –ì–û–†–û–î–û–í –ò –ö–£–†–°–û–í –†–ê–ë–û–¢–ê–Æ–¢ –ò–î–ï–ê–õ–¨–ù–û!")
    else:
        print("‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è–º–∏")
